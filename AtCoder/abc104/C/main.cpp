#include <bits/stdc++.h>
using namespace std;


void solve(long long D, long long G, std::vector<long long> p, std::vector<long long> c){
    int ans = 1e9;

    // bit全探索
    for (int i=0; i<(1<<D); i++) {
        int solve = 0, score = 0;
        int partial = -1;
        // それぞれのbitをチェックする
        for (int j=0; j<D; j++) {
            if (i & (1<<j)) {
                solve += p[j];
                score += 100 * (j + 1) * p[j] + c[j];
            } else {
                partial = j;
            }
        }

        long long less = G - score;
        if (less > 0) {
            int part_score = 100 * (partial + 1);
            if (less > part_score * p[partial]) continue;
            solve += min(p[partial], (less + (part_score-1)) / part_score);
        }
        ans = min(ans, solve);
    }
    cout << ans << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long D;
    scanf("%lld",&D);
    long long G;
    scanf("%lld",&G);
    std::vector<long long> p(D);
    std::vector<long long> c(D);
    for(int i = 0 ; i < D ; i++){
        scanf("%lld",&p[i]);
        scanf("%lld",&c[i]);
    }
    solve(D, G, std::move(p), std::move(c));
    return 0;
}
