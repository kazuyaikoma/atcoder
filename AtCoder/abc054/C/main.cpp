#include <bits/stdc++.h>
using namespace std;


int N, M;
vector<int> visited;
vector<vector<int>> vec;
int num_visited = 0;
int ans = 0;

void dfs(int now) {
    visited[now] = 1;
    if (++num_visited == N) ans++;

    for (int i = 0; i < vec[now].size(); i++) {
        int next = vec[now][i];
        if (!visited[next]) dfs(next);
    }

    visited[now] = 0;
    num_visited--;
}

void solve(long long N, long long M, vector<vector<int>> vec){
    dfs(0);
    cout << ans << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    cin >> N >> M;
    vec = vector<vector<int>>(N);
    visited = vector<int>(N, 0);
    for(int i = 0 ; i < M ; i++){
        int a, b;
        cin >> a >> b;
        // zero origin
        a--;
        b--;
        vec[a].push_back(b);
        vec[b].push_back(a);
    }

    solve(N, M, vec);
    return 0;
}
