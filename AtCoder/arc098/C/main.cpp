#include <bits/stdc++.h>
using namespace std;


void solve(long long N, std::string S){
  vector<int> vW(N + 1, 0), vE(N + 1, 0);

  for (int i = 0; i < N; i++) {
    // takeover of previous state
    vW[i+1] += vW[i];
    vE[i+1] += vE[i];
    // increment by 'W' or 'E'
    if (S[i] == 'W') { vW[i+1]++; } else { vE[i+1]++; }
  }

  int loss = 999999999;
  for (int i = 0; i < N; i++) {
    int n_loss = vW[i] + (vE[N] - vE[i+1]);
    if (loss > n_loss) loss = n_loss;
  }
  cout << loss << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    scanf("%lld",&N);
    std::string S;
    std::cin >> S;
    solve(N, S);
    return 0;
}
